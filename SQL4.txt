# ORACLE 날짜

MONTH_BETWEEN(최신날짜, 예전날짜)

SELECT ename, MONTHS_BETWEEN(SYSDATE,hiredate)
FROM emp;

SELECT TO_DATE('2019-06-01','RRRR-MM-DD')- TO_DATE('2018-10-01','RRRR-MM-DD')
    FROM dual;
(MONTH_BETWEEN 을 쓰지 않으면 이렇게 복잡하게 코드를 짜야한다.)

# 개월 후 날짜
SELECT ADD_MONTHS(TO_DATE('2019-05-01','RRRR-MM-DD'),10)
    FROM dual;
(ADD_MONTHS(날짜 입력, 개월후 입력)

# 특정 날짜 뒤에 오는 요일의 날짜
SELECT SYSDATE as 날짜, NEXT_DAY(SYSDATE,'wednesday')
    FROM dual;
(요일을 영어로 입력해야 된다.)

# 5달 뒤에 수요일의 날짜
SELECT SYSDATE as 날짜, NEXT_DAY(ADD_MONTHS(SYSDATE,5),'wednesday')
    FROM dual;

# 이번달이 몇일 남았을까
SELECT LAST_DAY(SYSDATE)-SYSDATE as 남은일
    FROM dual;

#이름이 SCOTT인 사원의 이름과 입사한 요일과 월급을 출력하세요.
SELECT ename as 이름 , TO_CHAR(hiredate,'day') as 입사한요일, sal as 급여
FROM emp
WHERE ename = 'SCOTT';

TO_CHAR
숫자형 -> 문자형
날짜형 -> 문자형

특히 날짜형은 문자로 변환하여 년 월 일 요일등을 추출한다.

# 1981년도에 입사한 사원들의 이름과 입사일만 출력하세요.
SELECT ename,TO_CHAR(hiredate,'DD') as 입사일
FROM emp
WHERE TO_CHAR(hiredate,'RRRR') = '1981';

# 또 다른 날짜 코드
SELECT ename,
EXTRACT(year from hiredate) as 연도,
EXTRACT(month from hiredate) as 달,
EXTRACT(day from hiredate) as 일
FROM emp;

# 숫자형을 문자형으로 
SELECT ename, to_char(sal,'999,999') as 급여
FROM emp;
(9가 숫자를 표현하는데 사용된다.)

SELECT ename, to_char(sal,'L999,999') as 급여
FROM emp;
(L이 화폐 기호로 사용된다. 한글 윈도우에서는 원이 표시되고 영문 윈도우에서는 달러가 표시된다.)

# TO_DATE 함수
81년 11월 17일에 입사한 사원의 이름과 입사일을 출력
SELECT ename, hiredate
FROM emp
WHERE hiredate = TO_DATE('81-11-17','RR-MM-DD');


# 형변환
문자형으로 숫자를 검색했지만 결과가 에러없이 잘 출력되었다.
오라클이 알아서 암묵적으로 형변환을 하기 때문에 에러가 발생하지 않고 출력된 것이다.
문자형은 숫자형으로 자동 변경하였다.

SELECT ename,sal
FROM emp32
WHERE sal = 3000;

오라클이 숫자로 변환하여 잘 검색 하였다. (암묵적 형변환)

# TO_NUMBER
명시적 형변환 
문자형을 숫자형으로 바꿀 때 사용한다 오라클이 자동으로 변환해주기도 하지만 강제로 바꾸는 방법도 있다.

# NVL	NVL2
SELECT ename,comm, NVL(comm,0)
FROM emp;
(comm테이블 안에 NULL값이 존재하면 0으로 바꾼다. 실제 NULL값이 0으로 바뀌는것이 아니라 보여지는 값만 0으로 바껴서 보여진다. 원본은 그대로 있다.)

SELECT ename,sal,comm, NVL(comm,0),sal-NVL(comm,0)
FROM emp;

SELECT ename,sal,comm, NVL2(comm,sal+comm,sal)
FROM emp;
(NVL2 : NULL이 아니면 계산하고 NULL이면 0)
NVL2(테이블명,계산값,치환값)


IF문을 SQL에서 구현하는 DECODE

























































































































































